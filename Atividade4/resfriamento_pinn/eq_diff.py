# -*- coding: utf-8 -*-
"""eq_diff.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nAC0Mhl9jGiEDpg0gY-ymPeN6grWEHmE

#### **Define a equação de resfriamento e define uma função que calcula o gradiente (ou derivada) da função aprendida para cada output da PINN com respeito ao seu input.**
"""

import torch
import numpy as np

# ------------------------------------------------------------------------------
# Define a função gradiente ou derivada que será aplicada para minimizar as
# perdas (Loss)
# ------------------------------------------------------------------------------

def grad(outputs, inputs):
  return torch.autograd.grad(outputs, inputs, grad_outputs=torch.ones_like(outputs), create_graph=True)

# ------------------------------------------------------------------------------
# Aqui o torch.autograd.grad retorna uma tupla com um tensor de derivada dos
# outputs com relação aos inputs. Para usar essa tupla chamamdos dT_dt = grad()
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Define a equação do resfriamento
# ------------------------------------------------------------------------------

def resfriamento(t, Ta, T0, r):

  T = Ta + (Ta - T0) * np.exp(-r * t)

  return T

